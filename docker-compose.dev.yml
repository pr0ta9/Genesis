# Development override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
services:
  backend:
    build:
      context: .
      # dockerfile: Dockerfile # CPU version
      dockerfile: Dockerfile.gpu-cuda12 # GPU version
    volumes:
      # Mount source code for development
      - ./src:/app/src
      - ./main.py:/app/main.py
      # Development data directories
      - ./data:/app/data
      # Don't mount tmp - it's just temporary execution files, let container create them
      # - ./tmp:/app/tmp
      - ./inputs:/app/inputs
      - ./outputs:/app/outputs
    environment:
      - GENESIS_KEEP_WORKSPACE=1
      - GENESIS_PROJECT_ROOT=/app
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@postgres:5432/gen
      - CORS_ORIGINS=["http://localhost:3000","http://frontend:3000"]
      - ALLOWED_FILE_ROOTS=/app/.staging_uploads:/tmp
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OLLAMA_HOST=host.docker.internal:11434
      - LOG_LEVEL=DEBUG
      # Weaviate connection
      - WEAVIATE_URL=http://weaviate:8080
    command: ["python", "-m", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app/src", "--reload-exclude", "**/__pycache__/**"]
    # Request GPU for Compose (non-Swarm)
    gpus: all
    depends_on:
      postgres:
        condition: service_healthy  
      weaviate:
        condition: service_healthy
    networks:
      - genesis-network

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #     target: deps  # Preinstall node_modules for dev
  #   volumes:
  #     # Mount source code for development
  #     - ./frontend/src:/app/src
  #     - ./frontend/public:/app/public
  #     - ./frontend/package.json:/app/package.json
  #     - ./frontend/next.config.ts:/app/next.config.ts
  #     - ./frontend/tsconfig.json:/app/tsconfig.json
  #     - ./frontend/postcss.config.mjs:/app/postcss.config.mjs
  #   environment:
  #     - NODE_ENV=development
  #     - NEXT_PUBLIC_API_BASE=http://localhost:8000
  #     # Enable polling so file changes from Windows bind mounts are detected
  #     - WATCHPACK_POLLING=true
  #     - WATCHPACK_POLLING_INTERVAL=300
  #     - CHOKIDAR_USEPOLLING=true
  #   ports:
  #     - "3000:3000"
  #   command: ["npm", "run", "dev", "--", "-H", "0.0.0.0", "-p", "3000"]
