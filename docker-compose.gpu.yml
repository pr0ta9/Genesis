# GPU-enabled docker-compose for CUDA 12.x systems
services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile.gpu-cuda12
    container_name: genesis-backend-gpu
    ports:
      - "8000:8000"
    environment:
      - GENESIS_KEEP_WORKSPACE=1
      - GENESIS_PROJECT_ROOT=/app
      - DATABASE_URL=sqlite:///./genesis.db
      - CORS_ORIGINS=["http://localhost:3000","http://frontend:3000"]
      - ALLOWED_FILE_ROOTS=/app/.staging_uploads:/tmp
      # Ollama configuration (using host system Ollama)
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OLLAMA_HOST=host.docker.internal:11434
    env_file:
      - .env
    volumes:
      # Persist data directories (bind-mounted so you can view them on host)
      - ./backend/data:/app/data
      - ./backend/tmp:/app/tmp
      - ./backend/inputs:/app/inputs
      - ./backend/outputs:/app/outputs
      # Mount for SQLite database persistence
      - ./backend/db:/app/db
      # Persist SQLite DB to Windows AppData (Docker expands ${APPDATA})
      - ${APPDATA}/Genesis:/root/.genesis
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: genesis-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
    depends_on:
      - backend
    networks:
      - genesis-network
    restart: unless-stopped

  # Optional: CLI service for running Genesis CLI commands
  cli:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genesis-cli
    environment:
      - GENESIS_KEEP_WORKSPACE=1
      - GENESIS_PROJECT_ROOT=/app
    env_file:
      - .env
    volumes:
      # Same volumes as backend for data consistency
      - genesis_data:/app/data
      - genesis_tmp:/app/tmp
      - genesis_inputs:/app/inputs
      - genesis_outputs:/app/outputs
      - genesis_db:/app/db
      # Mount local directories for file uploads/processing
      - ./inputs:/app/local_inputs:ro
      - ./outputs:/app/local_outputs
    networks:
      - genesis-network
    command: ["python", "main.py"]
    stdin_open: true
    tty: true
    profiles:
      - cli  # This service only runs when explicitly requested
    restart: "no"

volumes:
  genesis_data:
  genesis_tmp:
  genesis_inputs:
  genesis_outputs:
  genesis_db:

networks:
  genesis-network:
    driver: bridge
